package org.msh.etbm.test.commons.forms;

import org.apache.commons.beanutils.PropertyUtils;
import org.junit.Test;
import org.msh.etbm.commons.forms.controls.*;
import org.msh.etbm.commons.forms.data.Form;
import org.msh.etbm.commons.forms.impl.FormParser;
import org.msh.etbm.commons.models.data.JSFuncValue;
import org.msh.etbm.commons.models.data.fields.BoolField;
import org.msh.etbm.commons.models.data.fields.StringField;
import org.springframework.core.io.ClassPathResource;

import static org.junit.Assert.*;

/**
 * Created by rmemoria on 25/7/16.
 */
public class FormParserTest {

    @Test
    public void test() throws Exception {
        ClassPathResource res = new ClassPathResource("/test/forms/parse-test.json");
        FormParser p = new FormParser();
        Form frm = p.parse(res.getInputStream());

        assertEquals("tag", frm.getModel());
        assertNotNull(frm.getControls());
        assertEquals(4, frm.getControls().size());

        // check control properties
        ValuedControl vc = frm.searchControlByValue("name");
        assertNotNull(vc);
        assertEquals("string", vc.getType());
        assertEquals(StringControl.class, vc.getClass());
        assertNotNull(vc.getReadOnly());
        assertEquals(true, vc.getReadOnly().getValue());
        assertNotNull(vc.getSize());
        assertNotNull(vc.getSize().getMd());
        assertEquals(6, (int)vc.getSize().getMd());
        assertNotNull(vc.getField());
        assertEquals(StringField.class, vc.getField().getClass());

        StringField sf = (StringField)vc.getField();
        assertNotNull(sf.getRequired());
        assertEquals(true, sf.getRequired().getValue());

        // check container
        Control ctrl = frm.getControls().get(3);
        assertEquals(ContainerControl.class, ctrl.getClass());
        ContainerControl container = (ContainerControl)ctrl;
        assertNotNull(container.getControls());
        assertEquals(2, container.getControls().size());

        vc = (ValuedControl)container.getControls().get(0);
        assertEquals("consistencyCheck", vc.getValue());
        assertEquals(YesNoControl.class, vc.getClass());
        assertNotNull(vc.getField());
        assertEquals(BoolField.class, vc.getField().getClass());
        assertNotNull(vc.getSize());
        assertNotNull(vc.getSize().getMd());
        assertEquals(6, (int)vc.getSize().getMd());

        // test default values
        assertNotNull(frm.getDefaultProperties());
        assertEquals(2, frm.getDefaultProperties().size());
        assertTrue(frm.getDefaultProperties().containsKey("active"));
        assertTrue(frm.getDefaultProperties().containsKey("autoGenerated"));

        JSFuncValue val = frm.getDefaultProperties().get("active");
        assertTrue((Boolean)val.getValue());
        assertNull(val.getFunction());
        assertTrue(val.isValuePresent());
        assertFalse(val.isExpressionPresent());

        val = frm.getDefaultProperties().get("autoGenerated");
        assertTrue(val.isExpressionPresent());
        assertNotNull(val.getFunction());
    }

}
